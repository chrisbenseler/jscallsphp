<?php
/**
* Dados do usuário do BlogBlogs
*/
class BlogBlogsUser {
	function __construct($username, $firstname, $lastname, $fullname, $thumbnailpicture, $profilepage, $blogs, $favorites, $fans) {
		$this->userName = $username;
		$this->firstName = $firstname;
		$this->lastName = $lastname;
		$this->fullName = $fullname;
		$this->thumbnailPicutre = $thumbnailpicture;
		$this->profilePage = $profilepage;
		$this->blogsCount = $blogs;
		$this->favoritesCount = $favorites;
		$this->fansCount = $fans;
		$this->blogs = array();
	}
	
}

/**
* Dados de um blog do BlogBlogs
*/
class BlogBlogsBlog {
	function __construct($name, $url, $rssurl, $blogpage, $lastupdate, $inboundblogs, $inboundlinks, $rank, $lang) {
		$this->name = $name;
		$this->url = $url;
		$this->rssUrl = $rssurl;
		$this->blogPage = $blogpage;
		$this->lastUpdate = $lastupdate;
		$this->inboundBlogs = $inboundblogs;
		$this->inboundLinks = $inboundlinks;
		$this->rank = $rank;
		$this->lang = $lang;
	}
}

class BlogBlogsService {
	private $apiUrl = "http://api.blogblogs.com.br/api/rest/";
	private $userKey;
	private $doc;
	
	/**
	* construtor: recebe a chave da API do BlogBlogs
	* para gerar, acesse http://blogblogs.com.br/dev/chave
	*/
	function __construct($k) {
			$this->userKey = $k;
			$this->user = null;
	}
	
	/**
	* recebe o userName no blogblogs e faz a consulta
	*/
	function setUserName($userName) {
		$path = $this->apiUrl . "userinfo?key=" . $this->userKey . "&username=" . $userName;
		$this->doc = new DOMDocument();
		$this->doc->load($path);
		
		if($this->doc->getElementsByTagName("error")->length==1) {
			$this->errorMsg = $this->doc->getElementsByTagName("error")->item(0)->nodeValue;
			throw new Exception($this->errorMsg);
			return false;
		}
		
	
		if($this->doc->getElementsByTagName("result")->length!=1)
			return;
		//dados do usuário
		$userset = $this->doc->getElementsByTagName("result")->item(0);
		$blogBlogsUser = new BlogBlogsUser($userset->getElementsByTagName("username")->item(0)->nodeValue,
								   		   $userset->getElementsByTagName("firstname")->item(0)->nodeValue,
								   		   $userset->getElementsByTagName("lastname")->item(0)->nodeValue,
								   		   $userset->getElementsByTagName("fullname")->item(0)->nodeValue,
										   $userset->getElementsByTagName("thumbnailpicture")->item(0)->nodeValue,
								   		   $userset->getElementsByTagName("profilepage")->item(0)->nodeValue,
										   $userset->getElementsByTagName("blogs")->item(0)->nodeValue,
								   		   $userset->getElementsByTagName("favorites")->item(0)->nodeValue,
										   $userset->getElementsByTagName("fans")->item(0)->nodeValue);
		//dados de cada blog
		foreach($this->doc->getElementsByTagName("weblog") as $blog) {
			$blog = $this->createBlogWithXMLNode($blog);
			//$blogBlogsUser->addBlog($blog);
			$this->addBlogToUser($blogBlogsUser, $blog);
		}
		$this->user = $blogBlogsUser;
		return true;
	}
	
	/**
	* recupera um blog por uma url
	*/
	function getBlogByUrl($url) {
		$path = $this->apiUrl . "bloginfo?key=" . $this->userKey . "&url=" . $url;
		$this->doc = new DOMDocument();
		$this->doc->load($path);
		if($this->doc->getElementsByTagName("weblog")->length!=1)
			return;
		$blog = $this->doc->getElementsByTagName("weblog")->item(0);
		$myBlog = $this->createBlogWithXMLNode($blog);
		return $myBlog;
	
	}
	
	function createBlogWithXMLNode($node) {
		$blog = new BlogBlogsBlog($node->getElementsByTagName("name")->item(0)->nodeValue,
								  $node->getElementsByTagName("url")->item(0)->nodeValue,
								  $node->getElementsByTagName("rssurl")->item(0)->nodeValue,
								  $node->getElementsByTagName("blogpage")->item(0)->nodeValue,
								  $node->getElementsByTagName("lastupdate")->item(0)->nodeValue,
								  $node->getElementsByTagName("inboundblogs")->item(0)->nodeValue,
								  $node->getElementsByTagName("inboundlinks")->item(0)->nodeValue,
								  $node->getElementsByTagName("rank")->item(0)->nodeValue,
								  $node->getElementsByTagName("lang")->item(0)->nodeValue);
	
		return $blog;
	}
	
	function addBlogToUser($user, $blog) {
		array_push($user->blogs, $blog);
	}
}

?>